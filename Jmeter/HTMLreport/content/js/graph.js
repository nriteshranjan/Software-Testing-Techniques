/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 88459.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 196.0], [36.1, 196.0], [36.2, 196.0], [36.3, 196.0], [36.4, 196.0], [36.5, 196.0], [36.6, 196.0], [36.7, 196.0], [36.8, 196.0], [36.9, 196.0], [37.0, 227.0], [37.1, 227.0], [37.2, 227.0], [37.3, 227.0], [37.4, 227.0], [37.5, 227.0], [37.6, 227.0], [37.7, 227.0], [37.8, 227.0], [37.9, 227.0], [38.0, 228.0], [38.1, 228.0], [38.2, 228.0], [38.3, 228.0], [38.4, 228.0], [38.5, 228.0], [38.6, 228.0], [38.7, 228.0], [38.8, 228.0], [38.9, 228.0], [39.0, 230.0], [39.1, 230.0], [39.2, 230.0], [39.3, 230.0], [39.4, 230.0], [39.5, 230.0], [39.6, 230.0], [39.7, 230.0], [39.8, 230.0], [39.9, 230.0], [40.0, 230.0], [40.1, 230.0], [40.2, 230.0], [40.3, 230.0], [40.4, 230.0], [40.5, 230.0], [40.6, 230.0], [40.7, 230.0], [40.8, 230.0], [40.9, 230.0], [41.0, 232.0], [41.1, 232.0], [41.2, 232.0], [41.3, 232.0], [41.4, 232.0], [41.5, 232.0], [41.6, 232.0], [41.7, 232.0], [41.8, 232.0], [41.9, 232.0], [42.0, 234.0], [42.1, 234.0], [42.2, 234.0], [42.3, 234.0], [42.4, 234.0], [42.5, 234.0], [42.6, 234.0], [42.7, 234.0], [42.8, 234.0], [42.9, 234.0], [43.0, 240.0], [43.1, 240.0], [43.2, 240.0], [43.3, 240.0], [43.4, 240.0], [43.5, 240.0], [43.6, 240.0], [43.7, 240.0], [43.8, 240.0], [43.9, 240.0], [44.0, 240.0], [44.1, 240.0], [44.2, 240.0], [44.3, 240.0], [44.4, 240.0], [44.5, 240.0], [44.6, 240.0], [44.7, 240.0], [44.8, 240.0], [44.9, 240.0], [45.0, 242.0], [45.1, 242.0], [45.2, 242.0], [45.3, 242.0], [45.4, 242.0], [45.5, 242.0], [45.6, 242.0], [45.7, 242.0], [45.8, 242.0], [45.9, 242.0], [46.0, 247.0], [46.1, 247.0], [46.2, 247.0], [46.3, 247.0], [46.4, 247.0], [46.5, 247.0], [46.6, 247.0], [46.7, 247.0], [46.8, 247.0], [46.9, 247.0], [47.0, 249.0], [47.1, 249.0], [47.2, 249.0], [47.3, 249.0], [47.4, 249.0], [47.5, 249.0], [47.6, 249.0], [47.7, 249.0], [47.8, 249.0], [47.9, 249.0], [48.0, 252.0], [48.1, 252.0], [48.2, 252.0], [48.3, 252.0], [48.4, 252.0], [48.5, 252.0], [48.6, 252.0], [48.7, 252.0], [48.8, 252.0], [48.9, 252.0], [49.0, 255.0], [49.1, 255.0], [49.2, 255.0], [49.3, 255.0], [49.4, 255.0], [49.5, 255.0], [49.6, 255.0], [49.7, 255.0], [49.8, 255.0], [49.9, 255.0], [50.0, 273.0], [50.1, 273.0], [50.2, 273.0], [50.3, 273.0], [50.4, 273.0], [50.5, 273.0], [50.6, 273.0], [50.7, 273.0], [50.8, 273.0], [50.9, 273.0], [51.0, 296.0], [51.1, 296.0], [51.2, 296.0], [51.3, 296.0], [51.4, 296.0], [51.5, 296.0], [51.6, 296.0], [51.7, 296.0], [51.8, 296.0], [51.9, 296.0], [52.0, 300.0], [52.1, 300.0], [52.2, 300.0], [52.3, 300.0], [52.4, 300.0], [52.5, 300.0], [52.6, 300.0], [52.7, 300.0], [52.8, 300.0], [52.9, 300.0], [53.0, 300.0], [53.1, 300.0], [53.2, 300.0], [53.3, 300.0], [53.4, 300.0], [53.5, 300.0], [53.6, 300.0], [53.7, 300.0], [53.8, 300.0], [53.9, 300.0], [54.0, 328.0], [54.1, 328.0], [54.2, 328.0], [54.3, 328.0], [54.4, 328.0], [54.5, 328.0], [54.6, 328.0], [54.7, 328.0], [54.8, 328.0], [54.9, 328.0], [55.0, 354.0], [55.1, 354.0], [55.2, 354.0], [55.3, 354.0], [55.4, 354.0], [55.5, 354.0], [55.6, 354.0], [55.7, 354.0], [55.8, 354.0], [55.9, 354.0], [56.0, 356.0], [56.1, 356.0], [56.2, 356.0], [56.3, 356.0], [56.4, 356.0], [56.5, 356.0], [56.6, 356.0], [56.7, 356.0], [56.8, 356.0], [56.9, 356.0], [57.0, 359.0], [57.1, 359.0], [57.2, 359.0], [57.3, 359.0], [57.4, 359.0], [57.5, 359.0], [57.6, 359.0], [57.7, 359.0], [57.8, 359.0], [57.9, 359.0], [58.0, 375.0], [58.1, 375.0], [58.2, 375.0], [58.3, 375.0], [58.4, 375.0], [58.5, 375.0], [58.6, 375.0], [58.7, 375.0], [58.8, 375.0], [58.9, 375.0], [59.0, 379.0], [59.1, 379.0], [59.2, 379.0], [59.3, 379.0], [59.4, 379.0], [59.5, 379.0], [59.6, 379.0], [59.7, 379.0], [59.8, 379.0], [59.9, 379.0], [60.0, 399.0], [60.1, 399.0], [60.2, 399.0], [60.3, 399.0], [60.4, 399.0], [60.5, 399.0], [60.6, 399.0], [60.7, 399.0], [60.8, 399.0], [60.9, 399.0], [61.0, 407.0], [61.1, 407.0], [61.2, 407.0], [61.3, 407.0], [61.4, 407.0], [61.5, 407.0], [61.6, 407.0], [61.7, 407.0], [61.8, 407.0], [61.9, 407.0], [62.0, 409.0], [62.1, 409.0], [62.2, 409.0], [62.3, 409.0], [62.4, 409.0], [62.5, 409.0], [62.6, 409.0], [62.7, 409.0], [62.8, 409.0], [62.9, 409.0], [63.0, 412.0], [63.1, 412.0], [63.2, 412.0], [63.3, 412.0], [63.4, 412.0], [63.5, 412.0], [63.6, 412.0], [63.7, 412.0], [63.8, 412.0], [63.9, 412.0], [64.0, 475.0], [64.1, 475.0], [64.2, 475.0], [64.3, 475.0], [64.4, 475.0], [64.5, 475.0], [64.6, 475.0], [64.7, 475.0], [64.8, 475.0], [64.9, 475.0], [65.0, 487.0], [65.1, 487.0], [65.2, 487.0], [65.3, 487.0], [65.4, 487.0], [65.5, 487.0], [65.6, 487.0], [65.7, 487.0], [65.8, 487.0], [65.9, 487.0], [66.0, 491.0], [66.1, 491.0], [66.2, 491.0], [66.3, 491.0], [66.4, 491.0], [66.5, 491.0], [66.6, 491.0], [66.7, 491.0], [66.8, 491.0], [66.9, 491.0], [67.0, 503.0], [67.1, 503.0], [67.2, 503.0], [67.3, 503.0], [67.4, 503.0], [67.5, 503.0], [67.6, 503.0], [67.7, 503.0], [67.8, 503.0], [67.9, 503.0], [68.0, 539.0], [68.1, 539.0], [68.2, 539.0], [68.3, 539.0], [68.4, 539.0], [68.5, 539.0], [68.6, 539.0], [68.7, 539.0], [68.8, 539.0], [68.9, 539.0], [69.0, 539.0], [69.1, 539.0], [69.2, 539.0], [69.3, 539.0], [69.4, 539.0], [69.5, 539.0], [69.6, 539.0], [69.7, 539.0], [69.8, 539.0], [69.9, 539.0], [70.0, 554.0], [70.1, 554.0], [70.2, 554.0], [70.3, 554.0], [70.4, 554.0], [70.5, 554.0], [70.6, 554.0], [70.7, 554.0], [70.8, 554.0], [70.9, 554.0], [71.0, 563.0], [71.1, 563.0], [71.2, 563.0], [71.3, 563.0], [71.4, 563.0], [71.5, 563.0], [71.6, 563.0], [71.7, 563.0], [71.8, 563.0], [71.9, 563.0], [72.0, 566.0], [72.1, 566.0], [72.2, 566.0], [72.3, 566.0], [72.4, 566.0], [72.5, 566.0], [72.6, 566.0], [72.7, 566.0], [72.8, 566.0], [72.9, 566.0], [73.0, 595.0], [73.1, 595.0], [73.2, 595.0], [73.3, 595.0], [73.4, 595.0], [73.5, 595.0], [73.6, 595.0], [73.7, 595.0], [73.8, 595.0], [73.9, 595.0], [74.0, 598.0], [74.1, 598.0], [74.2, 598.0], [74.3, 598.0], [74.4, 598.0], [74.5, 598.0], [74.6, 598.0], [74.7, 598.0], [74.8, 598.0], [74.9, 598.0], [75.0, 632.0], [75.1, 632.0], [75.2, 632.0], [75.3, 632.0], [75.4, 632.0], [75.5, 632.0], [75.6, 632.0], [75.7, 632.0], [75.8, 632.0], [75.9, 632.0], [76.0, 635.0], [76.1, 635.0], [76.2, 635.0], [76.3, 635.0], [76.4, 635.0], [76.5, 635.0], [76.6, 635.0], [76.7, 635.0], [76.8, 635.0], [76.9, 635.0], [77.0, 637.0], [77.1, 637.0], [77.2, 637.0], [77.3, 637.0], [77.4, 637.0], [77.5, 637.0], [77.6, 637.0], [77.7, 637.0], [77.8, 637.0], [77.9, 637.0], [78.0, 650.0], [78.1, 650.0], [78.2, 650.0], [78.3, 650.0], [78.4, 650.0], [78.5, 650.0], [78.6, 650.0], [78.7, 650.0], [78.8, 650.0], [78.9, 650.0], [79.0, 664.0], [79.1, 664.0], [79.2, 664.0], [79.3, 664.0], [79.4, 664.0], [79.5, 664.0], [79.6, 664.0], [79.7, 664.0], [79.8, 664.0], [79.9, 664.0], [80.0, 665.0], [80.1, 665.0], [80.2, 665.0], [80.3, 665.0], [80.4, 665.0], [80.5, 665.0], [80.6, 665.0], [80.7, 665.0], [80.8, 665.0], [80.9, 665.0], [81.0, 666.0], [81.1, 666.0], [81.2, 666.0], [81.3, 666.0], [81.4, 666.0], [81.5, 666.0], [81.6, 666.0], [81.7, 666.0], [81.8, 666.0], [81.9, 666.0], [82.0, 671.0], [82.1, 671.0], [82.2, 671.0], [82.3, 671.0], [82.4, 671.0], [82.5, 671.0], [82.6, 671.0], [82.7, 671.0], [82.8, 671.0], [82.9, 671.0], [83.0, 678.0], [83.1, 678.0], [83.2, 678.0], [83.3, 678.0], [83.4, 678.0], [83.5, 678.0], [83.6, 678.0], [83.7, 678.0], [83.8, 678.0], [83.9, 678.0], [84.0, 687.0], [84.1, 687.0], [84.2, 687.0], [84.3, 687.0], [84.4, 687.0], [84.5, 687.0], [84.6, 687.0], [84.7, 687.0], [84.8, 687.0], [84.9, 687.0], [85.0, 702.0], [85.1, 702.0], [85.2, 702.0], [85.3, 702.0], [85.4, 702.0], [85.5, 702.0], [85.6, 702.0], [85.7, 702.0], [85.8, 702.0], [85.9, 702.0], [86.0, 731.0], [86.1, 731.0], [86.2, 731.0], [86.3, 731.0], [86.4, 731.0], [86.5, 731.0], [86.6, 731.0], [86.7, 731.0], [86.8, 731.0], [86.9, 731.0], [87.0, 744.0], [87.1, 744.0], [87.2, 744.0], [87.3, 744.0], [87.4, 744.0], [87.5, 744.0], [87.6, 744.0], [87.7, 744.0], [87.8, 744.0], [87.9, 744.0], [88.0, 758.0], [88.1, 758.0], [88.2, 758.0], [88.3, 758.0], [88.4, 758.0], [88.5, 758.0], [88.6, 758.0], [88.7, 758.0], [88.8, 758.0], [88.9, 758.0], [89.0, 843.0], [89.1, 843.0], [89.2, 843.0], [89.3, 843.0], [89.4, 843.0], [89.5, 843.0], [89.6, 843.0], [89.7, 843.0], [89.8, 843.0], [89.9, 843.0], [90.0, 866.0], [90.1, 866.0], [90.2, 866.0], [90.3, 866.0], [90.4, 866.0], [90.5, 866.0], [90.6, 866.0], [90.7, 866.0], [90.8, 866.0], [90.9, 866.0], [91.0, 877.0], [91.1, 877.0], [91.2, 877.0], [91.3, 877.0], [91.4, 877.0], [91.5, 877.0], [91.6, 877.0], [91.7, 877.0], [91.8, 877.0], [91.9, 877.0], [92.0, 926.0], [92.1, 926.0], [92.2, 926.0], [92.3, 926.0], [92.4, 926.0], [92.5, 926.0], [92.6, 926.0], [92.7, 926.0], [92.8, 926.0], [92.9, 926.0], [93.0, 1104.0], [93.1, 1104.0], [93.2, 1104.0], [93.3, 1104.0], [93.4, 1104.0], [93.5, 1104.0], [93.6, 1104.0], [93.7, 1104.0], [93.8, 1104.0], [93.9, 1104.0], [94.0, 1191.0], [94.1, 1191.0], [94.2, 1191.0], [94.3, 1191.0], [94.4, 1191.0], [94.5, 1191.0], [94.6, 1191.0], [94.7, 1191.0], [94.8, 1191.0], [94.9, 1191.0], [95.0, 1204.0], [95.1, 1204.0], [95.2, 1204.0], [95.3, 1204.0], [95.4, 1204.0], [95.5, 1204.0], [95.6, 1204.0], [95.7, 1204.0], [95.8, 1204.0], [95.9, 1204.0], [96.0, 1428.0], [96.1, 1428.0], [96.2, 1428.0], [96.3, 1428.0], [96.4, 1428.0], [96.5, 1428.0], [96.6, 1428.0], [96.7, 1428.0], [96.8, 1428.0], [96.9, 1428.0], [97.0, 3658.0], [97.1, 3658.0], [97.2, 3658.0], [97.3, 3658.0], [97.4, 3658.0], [97.5, 3658.0], [97.6, 3658.0], [97.7, 3658.0], [97.8, 3658.0], [97.9, 3658.0], [98.0, 4214.0], [98.1, 4214.0], [98.2, 4214.0], [98.3, 4214.0], [98.4, 4214.0], [98.5, 4214.0], [98.6, 4214.0], [98.7, 4214.0], [98.8, 4214.0], [98.9, 4214.0], [99.0, 7425.0], [99.1, 7425.0], [99.2, 7425.0], [99.3, 7425.0], [99.4, 7425.0], [99.5, 7425.0], [99.6, 7425.0], [99.7, 7425.0], [99.8, 7425.0], [99.9, 7425.0]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[0.0, 416.0], [0.1, 416.0], [0.2, 416.0], [0.3, 416.0], [0.4, 416.0], [0.5, 416.0], [0.6, 416.0], [0.7, 416.0], [0.8, 416.0], [0.9, 416.0], [1.0, 444.0], [1.1, 444.0], [1.2, 444.0], [1.3, 444.0], [1.4, 444.0], [1.5, 444.0], [1.6, 444.0], [1.7, 444.0], [1.8, 444.0], [1.9, 444.0], [2.0, 459.0], [2.1, 459.0], [2.2, 459.0], [2.3, 459.0], [2.4, 459.0], [2.5, 459.0], [2.6, 459.0], [2.7, 459.0], [2.8, 459.0], [2.9, 459.0], [3.0, 472.0], [3.1, 472.0], [3.2, 472.0], [3.3, 472.0], [3.4, 472.0], [3.5, 472.0], [3.6, 472.0], [3.7, 472.0], [3.8, 472.0], [3.9, 472.0], [4.0, 486.0], [4.1, 486.0], [4.2, 486.0], [4.3, 486.0], [4.4, 486.0], [4.5, 486.0], [4.6, 486.0], [4.7, 486.0], [4.8, 486.0], [4.9, 486.0], [5.0, 504.0], [5.1, 504.0], [5.2, 504.0], [5.3, 504.0], [5.4, 504.0], [5.5, 504.0], [5.6, 504.0], [5.7, 504.0], [5.8, 504.0], [5.9, 504.0], [6.0, 524.0], [6.1, 524.0], [6.2, 524.0], [6.3, 524.0], [6.4, 524.0], [6.5, 524.0], [6.6, 524.0], [6.7, 524.0], [6.8, 524.0], [6.9, 524.0], [7.0, 555.0], [7.1, 555.0], [7.2, 555.0], [7.3, 555.0], [7.4, 555.0], [7.5, 555.0], [7.6, 555.0], [7.7, 555.0], [7.8, 555.0], [7.9, 555.0], [8.0, 565.0], [8.1, 565.0], [8.2, 565.0], [8.3, 565.0], [8.4, 565.0], [8.5, 565.0], [8.6, 565.0], [8.7, 565.0], [8.8, 565.0], [8.9, 565.0], [9.0, 571.0], [9.1, 571.0], [9.2, 571.0], [9.3, 571.0], [9.4, 571.0], [9.5, 571.0], [9.6, 571.0], [9.7, 571.0], [9.8, 571.0], [9.9, 571.0], [10.0, 588.0], [10.1, 588.0], [10.2, 588.0], [10.3, 588.0], [10.4, 588.0], [10.5, 588.0], [10.6, 588.0], [10.7, 588.0], [10.8, 588.0], [10.9, 588.0], [11.0, 591.0], [11.1, 591.0], [11.2, 591.0], [11.3, 591.0], [11.4, 591.0], [11.5, 591.0], [11.6, 591.0], [11.7, 591.0], [11.8, 591.0], [11.9, 591.0], [12.0, 599.0], [12.1, 599.0], [12.2, 599.0], [12.3, 599.0], [12.4, 599.0], [12.5, 599.0], [12.6, 599.0], [12.7, 599.0], [12.8, 599.0], [12.9, 599.0], [13.0, 640.0], [13.1, 640.0], [13.2, 640.0], [13.3, 640.0], [13.4, 640.0], [13.5, 640.0], [13.6, 640.0], [13.7, 640.0], [13.8, 640.0], [13.9, 640.0], [14.0, 654.0], [14.1, 654.0], [14.2, 654.0], [14.3, 654.0], [14.4, 654.0], [14.5, 654.0], [14.6, 654.0], [14.7, 654.0], [14.8, 654.0], [14.9, 654.0], [15.0, 675.0], [15.1, 675.0], [15.2, 675.0], [15.3, 675.0], [15.4, 675.0], [15.5, 675.0], [15.6, 675.0], [15.7, 675.0], [15.8, 675.0], [15.9, 675.0], [16.0, 692.0], [16.1, 692.0], [16.2, 692.0], [16.3, 692.0], [16.4, 692.0], [16.5, 692.0], [16.6, 692.0], [16.7, 692.0], [16.8, 692.0], [16.9, 692.0], [17.0, 693.0], [17.1, 693.0], [17.2, 693.0], [17.3, 693.0], [17.4, 693.0], [17.5, 693.0], [17.6, 693.0], [17.7, 693.0], [17.8, 693.0], [17.9, 693.0], [18.0, 709.0], [18.1, 709.0], [18.2, 709.0], [18.3, 709.0], [18.4, 709.0], [18.5, 709.0], [18.6, 709.0], [18.7, 709.0], [18.8, 709.0], [18.9, 709.0], [19.0, 749.0], [19.1, 749.0], [19.2, 749.0], [19.3, 749.0], [19.4, 749.0], [19.5, 749.0], [19.6, 749.0], [19.7, 749.0], [19.8, 749.0], [19.9, 749.0], [20.0, 765.0], [20.1, 765.0], [20.2, 765.0], [20.3, 765.0], [20.4, 765.0], [20.5, 765.0], [20.6, 765.0], [20.7, 765.0], [20.8, 765.0], [20.9, 765.0], [21.0, 789.0], [21.1, 789.0], [21.2, 789.0], [21.3, 789.0], [21.4, 789.0], [21.5, 789.0], [21.6, 789.0], [21.7, 789.0], [21.8, 789.0], [21.9, 789.0], [22.0, 846.0], [22.1, 846.0], [22.2, 846.0], [22.3, 846.0], [22.4, 846.0], [22.5, 846.0], [22.6, 846.0], [22.7, 846.0], [22.8, 846.0], [22.9, 846.0], [23.0, 853.0], [23.1, 853.0], [23.2, 853.0], [23.3, 853.0], [23.4, 853.0], [23.5, 853.0], [23.6, 853.0], [23.7, 853.0], [23.8, 853.0], [23.9, 853.0], [24.0, 890.0], [24.1, 890.0], [24.2, 890.0], [24.3, 890.0], [24.4, 890.0], [24.5, 890.0], [24.6, 890.0], [24.7, 890.0], [24.8, 890.0], [24.9, 890.0], [25.0, 922.0], [25.1, 922.0], [25.2, 922.0], [25.3, 922.0], [25.4, 922.0], [25.5, 922.0], [25.6, 922.0], [25.7, 922.0], [25.8, 922.0], [25.9, 922.0], [26.0, 943.0], [26.1, 943.0], [26.2, 943.0], [26.3, 943.0], [26.4, 943.0], [26.5, 943.0], [26.6, 943.0], [26.7, 943.0], [26.8, 943.0], [26.9, 943.0], [27.0, 960.0], [27.1, 960.0], [27.2, 960.0], [27.3, 960.0], [27.4, 960.0], [27.5, 960.0], [27.6, 960.0], [27.7, 960.0], [27.8, 960.0], [27.9, 960.0], [28.0, 969.0], [28.1, 969.0], [28.2, 969.0], [28.3, 969.0], [28.4, 969.0], [28.5, 969.0], [28.6, 969.0], [28.7, 969.0], [28.8, 969.0], [28.9, 969.0], [29.0, 977.0], [29.1, 977.0], [29.2, 977.0], [29.3, 977.0], [29.4, 977.0], [29.5, 977.0], [29.6, 977.0], [29.7, 977.0], [29.8, 977.0], [29.9, 977.0], [30.0, 983.0], [30.1, 983.0], [30.2, 983.0], [30.3, 983.0], [30.4, 983.0], [30.5, 983.0], [30.6, 983.0], [30.7, 983.0], [30.8, 983.0], [30.9, 983.0], [31.0, 984.0], [31.1, 984.0], [31.2, 984.0], [31.3, 984.0], [31.4, 984.0], [31.5, 984.0], [31.6, 984.0], [31.7, 984.0], [31.8, 984.0], [31.9, 984.0], [32.0, 1002.0], [32.1, 1002.0], [32.2, 1002.0], [32.3, 1002.0], [32.4, 1002.0], [32.5, 1002.0], [32.6, 1002.0], [32.7, 1002.0], [32.8, 1002.0], [32.9, 1002.0], [33.0, 1006.0], [33.1, 1006.0], [33.2, 1006.0], [33.3, 1006.0], [33.4, 1006.0], [33.5, 1006.0], [33.6, 1006.0], [33.7, 1006.0], [33.8, 1006.0], [33.9, 1006.0], [34.0, 1031.0], [34.1, 1031.0], [34.2, 1031.0], [34.3, 1031.0], [34.4, 1031.0], [34.5, 1031.0], [34.6, 1031.0], [34.7, 1031.0], [34.8, 1031.0], [34.9, 1031.0], [35.0, 1046.0], [35.1, 1046.0], [35.2, 1046.0], [35.3, 1046.0], [35.4, 1046.0], [35.5, 1046.0], [35.6, 1046.0], [35.7, 1046.0], [35.8, 1046.0], [35.9, 1046.0], [36.0, 1141.0], [36.1, 1141.0], [36.2, 1141.0], [36.3, 1141.0], [36.4, 1141.0], [36.5, 1141.0], [36.6, 1141.0], [36.7, 1141.0], [36.8, 1141.0], [36.9, 1141.0], [37.0, 1246.0], [37.1, 1246.0], [37.2, 1246.0], [37.3, 1246.0], [37.4, 1246.0], [37.5, 1246.0], [37.6, 1246.0], [37.7, 1246.0], [37.8, 1246.0], [37.9, 1246.0], [38.0, 1282.0], [38.1, 1282.0], [38.2, 1282.0], [38.3, 1282.0], [38.4, 1282.0], [38.5, 1282.0], [38.6, 1282.0], [38.7, 1282.0], [38.8, 1282.0], [38.9, 1282.0], [39.0, 1283.0], [39.1, 1283.0], [39.2, 1283.0], [39.3, 1283.0], [39.4, 1283.0], [39.5, 1283.0], [39.6, 1283.0], [39.7, 1283.0], [39.8, 1283.0], [39.9, 1283.0], [40.0, 1295.0], [40.1, 1295.0], [40.2, 1295.0], [40.3, 1295.0], [40.4, 1295.0], [40.5, 1295.0], [40.6, 1295.0], [40.7, 1295.0], [40.8, 1295.0], [40.9, 1295.0], [41.0, 1300.0], [41.1, 1300.0], [41.2, 1300.0], [41.3, 1300.0], [41.4, 1300.0], [41.5, 1300.0], [41.6, 1300.0], [41.7, 1300.0], [41.8, 1300.0], [41.9, 1300.0], [42.0, 1344.0], [42.1, 1344.0], [42.2, 1344.0], [42.3, 1344.0], [42.4, 1344.0], [42.5, 1344.0], [42.6, 1344.0], [42.7, 1344.0], [42.8, 1344.0], [42.9, 1344.0], [43.0, 1370.0], [43.1, 1370.0], [43.2, 1370.0], [43.3, 1370.0], [43.4, 1370.0], [43.5, 1370.0], [43.6, 1370.0], [43.7, 1370.0], [43.8, 1370.0], [43.9, 1370.0], [44.0, 1382.0], [44.1, 1382.0], [44.2, 1382.0], [44.3, 1382.0], [44.4, 1382.0], [44.5, 1382.0], [44.6, 1382.0], [44.7, 1382.0], [44.8, 1382.0], [44.9, 1382.0], [45.0, 1432.0], [45.1, 1432.0], [45.2, 1432.0], [45.3, 1432.0], [45.4, 1432.0], [45.5, 1432.0], [45.6, 1432.0], [45.7, 1432.0], [45.8, 1432.0], [45.9, 1432.0], [46.0, 1473.0], [46.1, 1473.0], [46.2, 1473.0], [46.3, 1473.0], [46.4, 1473.0], [46.5, 1473.0], [46.6, 1473.0], [46.7, 1473.0], [46.8, 1473.0], [46.9, 1473.0], [47.0, 1506.0], [47.1, 1506.0], [47.2, 1506.0], [47.3, 1506.0], [47.4, 1506.0], [47.5, 1506.0], [47.6, 1506.0], [47.7, 1506.0], [47.8, 1506.0], [47.9, 1506.0], [48.0, 1959.0], [48.1, 1959.0], [48.2, 1959.0], [48.3, 1959.0], [48.4, 1959.0], [48.5, 1959.0], [48.6, 1959.0], [48.7, 1959.0], [48.8, 1959.0], [48.9, 1959.0], [49.0, 2100.0], [49.1, 2100.0], [49.2, 2100.0], [49.3, 2100.0], [49.4, 2100.0], [49.5, 2100.0], [49.6, 2100.0], [49.7, 2100.0], [49.8, 2100.0], [49.9, 2100.0], [50.0, 2310.0], [50.1, 2310.0], [50.2, 2310.0], [50.3, 2310.0], [50.4, 2310.0], [50.5, 2310.0], [50.6, 2310.0], [50.7, 2310.0], [50.8, 2310.0], [50.9, 2310.0], [51.0, 2600.0], [51.1, 2600.0], [51.2, 2600.0], [51.3, 2600.0], [51.4, 2600.0], [51.5, 2600.0], [51.6, 2600.0], [51.7, 2600.0], [51.8, 2600.0], [51.9, 2600.0], [52.0, 3340.0], [52.1, 3340.0], [52.2, 3340.0], [52.3, 3340.0], [52.4, 3340.0], [52.5, 3340.0], [52.6, 3340.0], [52.7, 3340.0], [52.8, 3340.0], [52.9, 3340.0], [53.0, 8279.0], [53.1, 8279.0], [53.2, 8279.0], [53.3, 8279.0], [53.4, 8279.0], [53.5, 8279.0], [53.6, 8279.0], [53.7, 8279.0], [53.8, 8279.0], [53.9, 8279.0], [54.0, 13819.0], [54.1, 13819.0], [54.2, 13819.0], [54.3, 13819.0], [54.4, 13819.0], [54.5, 13819.0], [54.6, 13819.0], [54.7, 13819.0], [54.8, 13819.0], [54.9, 13819.0], [55.0, 14405.0], [55.1, 14405.0], [55.2, 14405.0], [55.3, 14405.0], [55.4, 14405.0], [55.5, 14405.0], [55.6, 14405.0], [55.7, 14405.0], [55.8, 14405.0], [55.9, 14405.0], [56.0, 15377.0], [56.1, 15377.0], [56.2, 15377.0], [56.3, 15377.0], [56.4, 15377.0], [56.5, 15377.0], [56.6, 15377.0], [56.7, 15377.0], [56.8, 15377.0], [56.9, 15377.0], [57.0, 17369.0], [57.1, 17369.0], [57.2, 17369.0], [57.3, 17369.0], [57.4, 17369.0], [57.5, 17369.0], [57.6, 17369.0], [57.7, 17369.0], [57.8, 17369.0], [57.9, 17369.0], [58.0, 17884.0], [58.1, 17884.0], [58.2, 17884.0], [58.3, 17884.0], [58.4, 17884.0], [58.5, 17884.0], [58.6, 17884.0], [58.7, 17884.0], [58.8, 17884.0], [58.9, 17884.0], [59.0, 17909.0], [59.1, 17909.0], [59.2, 17909.0], [59.3, 17909.0], [59.4, 17909.0], [59.5, 17909.0], [59.6, 17909.0], [59.7, 17909.0], [59.8, 17909.0], [59.9, 17909.0], [60.0, 19493.0], [60.1, 19493.0], [60.2, 19493.0], [60.3, 19493.0], [60.4, 19493.0], [60.5, 19493.0], [60.6, 19493.0], [60.7, 19493.0], [60.8, 19493.0], [60.9, 19493.0], [61.0, 21084.0], [61.1, 21084.0], [61.2, 21084.0], [61.3, 21084.0], [61.4, 21084.0], [61.5, 21084.0], [61.6, 21084.0], [61.7, 21084.0], [61.8, 21084.0], [61.9, 21084.0], [62.0, 21212.0], [62.1, 21212.0], [62.2, 21212.0], [62.3, 21212.0], [62.4, 21212.0], [62.5, 21212.0], [62.6, 21212.0], [62.7, 21212.0], [62.8, 21212.0], [62.9, 21212.0], [63.0, 22847.0], [63.1, 22847.0], [63.2, 22847.0], [63.3, 22847.0], [63.4, 22847.0], [63.5, 22847.0], [63.6, 22847.0], [63.7, 22847.0], [63.8, 22847.0], [63.9, 22847.0], [64.0, 25663.0], [64.1, 25663.0], [64.2, 25663.0], [64.3, 25663.0], [64.4, 25663.0], [64.5, 25663.0], [64.6, 25663.0], [64.7, 25663.0], [64.8, 25663.0], [64.9, 25663.0], [65.0, 26765.0], [65.1, 26765.0], [65.2, 26765.0], [65.3, 26765.0], [65.4, 26765.0], [65.5, 26765.0], [65.6, 26765.0], [65.7, 26765.0], [65.8, 26765.0], [65.9, 26765.0], [66.0, 29651.0], [66.1, 29651.0], [66.2, 29651.0], [66.3, 29651.0], [66.4, 29651.0], [66.5, 29651.0], [66.6, 29651.0], [66.7, 29651.0], [66.8, 29651.0], [66.9, 29651.0], [67.0, 29992.0], [67.1, 29992.0], [67.2, 29992.0], [67.3, 29992.0], [67.4, 29992.0], [67.5, 29992.0], [67.6, 29992.0], [67.7, 29992.0], [67.8, 29992.0], [67.9, 29992.0], [68.0, 30519.0], [68.1, 30519.0], [68.2, 30519.0], [68.3, 30519.0], [68.4, 30519.0], [68.5, 30519.0], [68.6, 30519.0], [68.7, 30519.0], [68.8, 30519.0], [68.9, 30519.0], [69.0, 31120.0], [69.1, 31120.0], [69.2, 31120.0], [69.3, 31120.0], [69.4, 31120.0], [69.5, 31120.0], [69.6, 31120.0], [69.7, 31120.0], [69.8, 31120.0], [69.9, 31120.0], [70.0, 32011.0], [70.1, 32011.0], [70.2, 32011.0], [70.3, 32011.0], [70.4, 32011.0], [70.5, 32011.0], [70.6, 32011.0], [70.7, 32011.0], [70.8, 32011.0], [70.9, 32011.0], [71.0, 32613.0], [71.1, 32613.0], [71.2, 32613.0], [71.3, 32613.0], [71.4, 32613.0], [71.5, 32613.0], [71.6, 32613.0], [71.7, 32613.0], [71.8, 32613.0], [71.9, 32613.0], [72.0, 35553.0], [72.1, 35553.0], [72.2, 35553.0], [72.3, 35553.0], [72.4, 35553.0], [72.5, 35553.0], [72.6, 35553.0], [72.7, 35553.0], [72.8, 35553.0], [72.9, 35553.0], [73.0, 37458.0], [73.1, 37458.0], [73.2, 37458.0], [73.3, 37458.0], [73.4, 37458.0], [73.5, 37458.0], [73.6, 37458.0], [73.7, 37458.0], [73.8, 37458.0], [73.9, 37458.0], [74.0, 37642.0], [74.1, 37642.0], [74.2, 37642.0], [74.3, 37642.0], [74.4, 37642.0], [74.5, 37642.0], [74.6, 37642.0], [74.7, 37642.0], [74.8, 37642.0], [74.9, 37642.0], [75.0, 37772.0], [75.1, 37772.0], [75.2, 37772.0], [75.3, 37772.0], [75.4, 37772.0], [75.5, 37772.0], [75.6, 37772.0], [75.7, 37772.0], [75.8, 37772.0], [75.9, 37772.0], [76.0, 37822.0], [76.1, 37822.0], [76.2, 37822.0], [76.3, 37822.0], [76.4, 37822.0], [76.5, 37822.0], [76.6, 37822.0], [76.7, 37822.0], [76.8, 37822.0], [76.9, 37822.0], [77.0, 38565.0], [77.1, 38565.0], [77.2, 38565.0], [77.3, 38565.0], [77.4, 38565.0], [77.5, 38565.0], [77.6, 38565.0], [77.7, 38565.0], [77.8, 38565.0], [77.9, 38565.0], [78.0, 39427.0], [78.1, 39427.0], [78.2, 39427.0], [78.3, 39427.0], [78.4, 39427.0], [78.5, 39427.0], [78.6, 39427.0], [78.7, 39427.0], [78.8, 39427.0], [78.9, 39427.0], [79.0, 41181.0], [79.1, 41181.0], [79.2, 41181.0], [79.3, 41181.0], [79.4, 41181.0], [79.5, 41181.0], [79.6, 41181.0], [79.7, 41181.0], [79.8, 41181.0], [79.9, 41181.0], [80.0, 41293.0], [80.1, 41293.0], [80.2, 41293.0], [80.3, 41293.0], [80.4, 41293.0], [80.5, 41293.0], [80.6, 41293.0], [80.7, 41293.0], [80.8, 41293.0], [80.9, 41293.0], [81.0, 41655.0], [81.1, 41655.0], [81.2, 41655.0], [81.3, 41655.0], [81.4, 41655.0], [81.5, 41655.0], [81.6, 41655.0], [81.7, 41655.0], [81.8, 41655.0], [81.9, 41655.0], [82.0, 42231.0], [82.1, 42231.0], [82.2, 42231.0], [82.3, 42231.0], [82.4, 42231.0], [82.5, 42231.0], [82.6, 42231.0], [82.7, 42231.0], [82.8, 42231.0], [82.9, 42231.0], [83.0, 44834.0], [83.1, 44834.0], [83.2, 44834.0], [83.3, 44834.0], [83.4, 44834.0], [83.5, 44834.0], [83.6, 44834.0], [83.7, 44834.0], [83.8, 44834.0], [83.9, 44834.0], [84.0, 47583.0], [84.1, 47583.0], [84.2, 47583.0], [84.3, 47583.0], [84.4, 47583.0], [84.5, 47583.0], [84.6, 47583.0], [84.7, 47583.0], [84.8, 47583.0], [84.9, 47583.0], [85.0, 49006.0], [85.1, 49006.0], [85.2, 49006.0], [85.3, 49006.0], [85.4, 49006.0], [85.5, 49006.0], [85.6, 49006.0], [85.7, 49006.0], [85.8, 49006.0], [85.9, 49006.0], [86.0, 50875.0], [86.1, 50875.0], [86.2, 50875.0], [86.3, 50875.0], [86.4, 50875.0], [86.5, 50875.0], [86.6, 50875.0], [86.7, 50875.0], [86.8, 50875.0], [86.9, 50875.0], [87.0, 51125.0], [87.1, 51125.0], [87.2, 51125.0], [87.3, 51125.0], [87.4, 51125.0], [87.5, 51125.0], [87.6, 51125.0], [87.7, 51125.0], [87.8, 51125.0], [87.9, 51125.0], [88.0, 51602.0], [88.1, 51602.0], [88.2, 51602.0], [88.3, 51602.0], [88.4, 51602.0], [88.5, 51602.0], [88.6, 51602.0], [88.7, 51602.0], [88.8, 51602.0], [88.9, 51602.0], [89.0, 52885.0], [89.1, 52885.0], [89.2, 52885.0], [89.3, 52885.0], [89.4, 52885.0], [89.5, 52885.0], [89.6, 52885.0], [89.7, 52885.0], [89.8, 52885.0], [89.9, 52885.0], [90.0, 57206.0], [90.1, 57206.0], [90.2, 57206.0], [90.3, 57206.0], [90.4, 57206.0], [90.5, 57206.0], [90.6, 57206.0], [90.7, 57206.0], [90.8, 57206.0], [90.9, 57206.0], [91.0, 58697.0], [91.1, 58697.0], [91.2, 58697.0], [91.3, 58697.0], [91.4, 58697.0], [91.5, 58697.0], [91.6, 58697.0], [91.7, 58697.0], [91.8, 58697.0], [91.9, 58697.0], [92.0, 60241.0], [92.1, 60241.0], [92.2, 60241.0], [92.3, 60241.0], [92.4, 60241.0], [92.5, 60241.0], [92.6, 60241.0], [92.7, 60241.0], [92.8, 60241.0], [92.9, 60241.0], [93.0, 60269.0], [93.1, 60269.0], [93.2, 60269.0], [93.3, 60269.0], [93.4, 60269.0], [93.5, 60269.0], [93.6, 60269.0], [93.7, 60269.0], [93.8, 60269.0], [93.9, 60269.0], [94.0, 60778.0], [94.1, 60778.0], [94.2, 60778.0], [94.3, 60778.0], [94.4, 60778.0], [94.5, 60778.0], [94.6, 60778.0], [94.7, 60778.0], [94.8, 60778.0], [94.9, 60778.0], [95.0, 64066.0], [95.1, 64066.0], [95.2, 64066.0], [95.3, 64066.0], [95.4, 64066.0], [95.5, 64066.0], [95.6, 64066.0], [95.7, 64066.0], [95.8, 64066.0], [95.9, 64066.0], [96.0, 68535.0], [96.1, 68535.0], [96.2, 68535.0], [96.3, 68535.0], [96.4, 68535.0], [96.5, 68535.0], [96.6, 68535.0], [96.7, 68535.0], [96.8, 68535.0], [96.9, 68535.0], [97.0, 71559.0], [97.1, 71559.0], [97.2, 71559.0], [97.3, 71559.0], [97.4, 71559.0], [97.5, 71559.0], [97.6, 71559.0], [97.7, 71559.0], [97.8, 71559.0], [97.9, 71559.0], [98.0, 73970.0], [98.1, 73970.0], [98.2, 73970.0], [98.3, 73970.0], [98.4, 73970.0], [98.5, 73970.0], [98.6, 73970.0], [98.7, 73970.0], [98.8, 73970.0], [98.9, 73970.0], [99.0, 88459.0], [99.1, 88459.0], [99.2, 88459.0], [99.3, 88459.0], [99.4, 88459.0], [99.5, 88459.0], [99.6, 88459.0], [99.7, 88459.0], [99.8, 88459.0], [99.9, 88459.0]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 97.0], [1.7, 97.0], [1.8, 97.0], [1.9, 97.0], [2.0, 97.0], [2.1, 97.0], [2.2, 97.0], [2.3, 97.0], [2.4, 97.0], [2.5, 97.0], [2.6, 97.0], [2.7, 97.0], [2.8, 97.0], [2.9, 97.0], [3.0, 97.0], [3.1, 97.0], [3.2, 102.0], [3.3, 102.0], [3.4, 102.0], [3.5, 102.0], [3.6, 102.0], [3.7, 102.0], [3.8, 102.0], [3.9, 102.0], [4.0, 102.0], [4.1, 102.0], [4.2, 102.0], [4.3, 102.0], [4.4, 102.0], [4.5, 102.0], [4.6, 102.0], [4.7, 104.0], [4.8, 104.0], [4.9, 104.0], [5.0, 104.0], [5.1, 104.0], [5.2, 104.0], [5.3, 104.0], [5.4, 104.0], [5.5, 104.0], [5.6, 104.0], [5.7, 104.0], [5.8, 104.0], [5.9, 104.0], [6.0, 104.0], [6.1, 104.0], [6.2, 104.0], [6.3, 104.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 104.0], [7.2, 104.0], [7.3, 104.0], [7.4, 104.0], [7.5, 104.0], [7.6, 104.0], [7.7, 104.0], [7.8, 104.0], [7.9, 109.0], [8.0, 109.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 109.0], [8.6, 109.0], [8.7, 109.0], [8.8, 109.0], [8.9, 109.0], [9.0, 109.0], [9.1, 109.0], [9.2, 109.0], [9.3, 109.0], [9.4, 110.0], [9.5, 110.0], [9.6, 110.0], [9.7, 110.0], [9.8, 110.0], [9.9, 110.0], [10.0, 110.0], [10.1, 110.0], [10.2, 110.0], [10.3, 110.0], [10.4, 110.0], [10.5, 110.0], [10.6, 110.0], [10.7, 110.0], [10.8, 110.0], [10.9, 110.0], [11.0, 110.0], [11.1, 110.0], [11.2, 110.0], [11.3, 110.0], [11.4, 110.0], [11.5, 110.0], [11.6, 110.0], [11.7, 110.0], [11.8, 110.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 110.0], [12.3, 110.0], [12.4, 110.0], [12.5, 111.0], [12.6, 111.0], [12.7, 111.0], [12.8, 111.0], [12.9, 111.0], [13.0, 111.0], [13.1, 111.0], [13.2, 111.0], [13.3, 111.0], [13.4, 111.0], [13.5, 111.0], [13.6, 111.0], [13.7, 111.0], [13.8, 111.0], [13.9, 111.0], [14.0, 111.0], [14.1, 111.0], [14.2, 111.0], [14.3, 111.0], [14.4, 111.0], [14.5, 111.0], [14.6, 111.0], [14.7, 111.0], [14.8, 111.0], [14.9, 111.0], [15.0, 111.0], [15.1, 111.0], [15.2, 111.0], [15.3, 111.0], [15.4, 111.0], [15.5, 111.0], [15.6, 111.0], [15.7, 113.0], [15.8, 113.0], [15.9, 113.0], [16.0, 113.0], [16.1, 113.0], [16.2, 113.0], [16.3, 113.0], [16.4, 113.0], [16.5, 113.0], [16.6, 113.0], [16.7, 113.0], [16.8, 113.0], [16.9, 113.0], [17.0, 113.0], [17.1, 113.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 116.0], [17.9, 116.0], [18.0, 116.0], [18.1, 116.0], [18.2, 116.0], [18.3, 116.0], [18.4, 116.0], [18.5, 116.0], [18.6, 116.0], [18.7, 116.0], [18.8, 120.0], [18.9, 120.0], [19.0, 120.0], [19.1, 120.0], [19.2, 120.0], [19.3, 120.0], [19.4, 120.0], [19.5, 120.0], [19.6, 120.0], [19.7, 120.0], [19.8, 120.0], [19.9, 120.0], [20.0, 120.0], [20.1, 120.0], [20.2, 120.0], [20.3, 120.0], [20.4, 124.0], [20.5, 124.0], [20.6, 124.0], [20.7, 124.0], [20.8, 124.0], [20.9, 124.0], [21.0, 124.0], [21.1, 124.0], [21.2, 124.0], [21.3, 124.0], [21.4, 124.0], [21.5, 124.0], [21.6, 124.0], [21.7, 124.0], [21.8, 124.0], [21.9, 124.0], [22.0, 124.0], [22.1, 124.0], [22.2, 124.0], [22.3, 124.0], [22.4, 124.0], [22.5, 124.0], [22.6, 124.0], [22.7, 124.0], [22.8, 124.0], [22.9, 124.0], [23.0, 124.0], [23.1, 124.0], [23.2, 124.0], [23.3, 124.0], [23.4, 124.0], [23.5, 125.0], [23.6, 125.0], [23.7, 125.0], [23.8, 125.0], [23.9, 125.0], [24.0, 125.0], [24.1, 125.0], [24.2, 125.0], [24.3, 125.0], [24.4, 125.0], [24.5, 125.0], [24.6, 125.0], [24.7, 125.0], [24.8, 125.0], [24.9, 125.0], [25.0, 125.0], [25.1, 125.0], [25.2, 125.0], [25.3, 125.0], [25.4, 125.0], [25.5, 125.0], [25.6, 125.0], [25.7, 125.0], [25.8, 125.0], [25.9, 125.0], [26.0, 125.0], [26.1, 125.0], [26.2, 125.0], [26.3, 125.0], [26.4, 125.0], [26.5, 125.0], [26.6, 126.0], [26.7, 126.0], [26.8, 126.0], [26.9, 126.0], [27.0, 126.0], [27.1, 126.0], [27.2, 126.0], [27.3, 126.0], [27.4, 126.0], [27.5, 126.0], [27.6, 126.0], [27.7, 126.0], [27.8, 126.0], [27.9, 126.0], [28.0, 126.0], [28.1, 126.0], [28.2, 126.0], [28.3, 126.0], [28.4, 126.0], [28.5, 126.0], [28.6, 126.0], [28.7, 126.0], [28.8, 126.0], [28.9, 126.0], [29.0, 126.0], [29.1, 126.0], [29.2, 126.0], [29.3, 126.0], [29.4, 126.0], [29.5, 126.0], [29.6, 126.0], [29.7, 127.0], [29.8, 127.0], [29.9, 127.0], [30.0, 127.0], [30.1, 127.0], [30.2, 127.0], [30.3, 127.0], [30.4, 127.0], [30.5, 127.0], [30.6, 127.0], [30.7, 127.0], [30.8, 127.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 127.0], [31.3, 132.0], [31.4, 132.0], [31.5, 132.0], [31.6, 132.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 132.0], [32.1, 132.0], [32.2, 132.0], [32.3, 132.0], [32.4, 132.0], [32.5, 132.0], [32.6, 132.0], [32.7, 132.0], [32.8, 132.0], [32.9, 141.0], [33.0, 141.0], [33.1, 141.0], [33.2, 141.0], [33.3, 141.0], [33.4, 141.0], [33.5, 141.0], [33.6, 141.0], [33.7, 141.0], [33.8, 141.0], [33.9, 141.0], [34.0, 141.0], [34.1, 141.0], [34.2, 141.0], [34.3, 141.0], [34.4, 147.0], [34.5, 147.0], [34.6, 147.0], [34.7, 147.0], [34.8, 147.0], [34.9, 147.0], [35.0, 147.0], [35.1, 147.0], [35.2, 147.0], [35.3, 147.0], [35.4, 147.0], [35.5, 147.0], [35.6, 147.0], [35.7, 147.0], [35.8, 147.0], [35.9, 147.0], [36.0, 148.0], [36.1, 148.0], [36.2, 148.0], [36.3, 148.0], [36.4, 148.0], [36.5, 148.0], [36.6, 148.0], [36.7, 148.0], [36.8, 148.0], [36.9, 148.0], [37.0, 148.0], [37.1, 148.0], [37.2, 148.0], [37.3, 148.0], [37.4, 148.0], [37.5, 149.0], [37.6, 149.0], [37.7, 149.0], [37.8, 149.0], [37.9, 149.0], [38.0, 149.0], [38.1, 149.0], [38.2, 149.0], [38.3, 149.0], [38.4, 149.0], [38.5, 149.0], [38.6, 149.0], [38.7, 149.0], [38.8, 149.0], [38.9, 149.0], [39.0, 149.0], [39.1, 149.0], [39.2, 149.0], [39.3, 149.0], [39.4, 149.0], [39.5, 149.0], [39.6, 149.0], [39.7, 149.0], [39.8, 149.0], [39.9, 149.0], [40.0, 149.0], [40.1, 149.0], [40.2, 149.0], [40.3, 149.0], [40.4, 149.0], [40.5, 149.0], [40.6, 149.0], [40.7, 151.0], [40.8, 151.0], [40.9, 151.0], [41.0, 151.0], [41.1, 151.0], [41.2, 151.0], [41.3, 151.0], [41.4, 151.0], [41.5, 151.0], [41.6, 151.0], [41.7, 151.0], [41.8, 151.0], [41.9, 151.0], [42.0, 151.0], [42.1, 151.0], [42.2, 155.0], [42.3, 155.0], [42.4, 155.0], [42.5, 155.0], [42.6, 155.0], [42.7, 155.0], [42.8, 155.0], [42.9, 155.0], [43.0, 155.0], [43.1, 155.0], [43.2, 155.0], [43.3, 155.0], [43.4, 155.0], [43.5, 155.0], [43.6, 155.0], [43.7, 155.0], [43.8, 165.0], [43.9, 165.0], [44.0, 165.0], [44.1, 165.0], [44.2, 165.0], [44.3, 165.0], [44.4, 165.0], [44.5, 165.0], [44.6, 165.0], [44.7, 165.0], [44.8, 165.0], [44.9, 165.0], [45.0, 165.0], [45.1, 165.0], [45.2, 165.0], [45.3, 165.0], [45.4, 191.0], [45.5, 191.0], [45.6, 191.0], [45.7, 191.0], [45.8, 191.0], [45.9, 191.0], [46.0, 191.0], [46.1, 191.0], [46.2, 191.0], [46.3, 191.0], [46.4, 191.0], [46.5, 191.0], [46.6, 191.0], [46.7, 191.0], [46.8, 191.0], [46.9, 191.0], [47.0, 191.0], [47.1, 191.0], [47.2, 191.0], [47.3, 191.0], [47.4, 191.0], [47.5, 191.0], [47.6, 191.0], [47.7, 191.0], [47.8, 191.0], [47.9, 191.0], [48.0, 191.0], [48.1, 191.0], [48.2, 191.0], [48.3, 191.0], [48.4, 191.0], [48.5, 200.0], [48.6, 200.0], [48.7, 200.0], [48.8, 200.0], [48.9, 200.0], [49.0, 200.0], [49.1, 200.0], [49.2, 200.0], [49.3, 200.0], [49.4, 200.0], [49.5, 200.0], [49.6, 200.0], [49.7, 200.0], [49.8, 200.0], [49.9, 200.0], [50.0, 209.0], [50.1, 209.0], [50.2, 209.0], [50.3, 209.0], [50.4, 209.0], [50.5, 209.0], [50.6, 209.0], [50.7, 209.0], [50.8, 209.0], [50.9, 209.0], [51.0, 209.0], [51.1, 209.0], [51.2, 209.0], [51.3, 209.0], [51.4, 209.0], [51.5, 209.0], [51.6, 210.0], [51.7, 210.0], [51.8, 210.0], [51.9, 210.0], [52.0, 210.0], [52.1, 210.0], [52.2, 210.0], [52.3, 210.0], [52.4, 210.0], [52.5, 210.0], [52.6, 210.0], [52.7, 210.0], [52.8, 210.0], [52.9, 210.0], [53.0, 210.0], [53.1, 210.0], [53.2, 213.0], [53.3, 213.0], [53.4, 213.0], [53.5, 213.0], [53.6, 213.0], [53.7, 213.0], [53.8, 213.0], [53.9, 213.0], [54.0, 213.0], [54.1, 213.0], [54.2, 213.0], [54.3, 213.0], [54.4, 213.0], [54.5, 213.0], [54.6, 213.0], [54.7, 222.0], [54.8, 222.0], [54.9, 222.0], [55.0, 222.0], [55.1, 222.0], [55.2, 222.0], [55.3, 222.0], [55.4, 222.0], [55.5, 222.0], [55.6, 222.0], [55.7, 222.0], [55.8, 222.0], [55.9, 222.0], [56.0, 222.0], [56.1, 222.0], [56.2, 222.0], [56.3, 223.0], [56.4, 223.0], [56.5, 223.0], [56.6, 223.0], [56.7, 223.0], [56.8, 223.0], [56.9, 223.0], [57.0, 223.0], [57.1, 223.0], [57.2, 223.0], [57.3, 223.0], [57.4, 223.0], [57.5, 223.0], [57.6, 223.0], [57.7, 223.0], [57.8, 223.0], [57.9, 228.0], [58.0, 228.0], [58.1, 228.0], [58.2, 228.0], [58.3, 228.0], [58.4, 228.0], [58.5, 228.0], [58.6, 228.0], [58.7, 228.0], [58.8, 228.0], [58.9, 228.0], [59.0, 228.0], [59.1, 228.0], [59.2, 228.0], [59.3, 228.0], [59.4, 235.0], [59.5, 235.0], [59.6, 235.0], [59.7, 235.0], [59.8, 235.0], [59.9, 235.0], [60.0, 235.0], [60.1, 235.0], [60.2, 235.0], [60.3, 235.0], [60.4, 235.0], [60.5, 235.0], [60.6, 235.0], [60.7, 235.0], [60.8, 235.0], [60.9, 235.0], [61.0, 266.0], [61.1, 266.0], [61.2, 266.0], [61.3, 266.0], [61.4, 266.0], [61.5, 266.0], [61.6, 266.0], [61.7, 266.0], [61.8, 266.0], [61.9, 266.0], [62.0, 266.0], [62.1, 266.0], [62.2, 266.0], [62.3, 266.0], [62.4, 266.0], [62.5, 279.0], [62.6, 279.0], [62.7, 279.0], [62.8, 279.0], [62.9, 279.0], [63.0, 279.0], [63.1, 279.0], [63.2, 279.0], [63.3, 279.0], [63.4, 279.0], [63.5, 279.0], [63.6, 279.0], [63.7, 279.0], [63.8, 279.0], [63.9, 279.0], [64.0, 279.0], [64.1, 281.0], [64.2, 281.0], [64.3, 281.0], [64.4, 281.0], [64.5, 281.0], [64.6, 281.0], [64.7, 281.0], [64.8, 281.0], [64.9, 281.0], [65.0, 281.0], [65.1, 281.0], [65.2, 281.0], [65.3, 281.0], [65.4, 281.0], [65.5, 281.0], [65.6, 281.0], [65.7, 284.0], [65.8, 284.0], [65.9, 284.0], [66.0, 284.0], [66.1, 284.0], [66.2, 284.0], [66.3, 284.0], [66.4, 284.0], [66.5, 284.0], [66.6, 284.0], [66.7, 284.0], [66.8, 284.0], [66.9, 284.0], [67.0, 284.0], [67.1, 284.0], [67.2, 296.0], [67.3, 296.0], [67.4, 296.0], [67.5, 296.0], [67.6, 296.0], [67.7, 296.0], [67.8, 296.0], [67.9, 296.0], [68.0, 296.0], [68.1, 296.0], [68.2, 296.0], [68.3, 296.0], [68.4, 296.0], [68.5, 296.0], [68.6, 296.0], [68.7, 296.0], [68.8, 297.0], [68.9, 297.0], [69.0, 297.0], [69.1, 297.0], [69.2, 297.0], [69.3, 297.0], [69.4, 297.0], [69.5, 297.0], [69.6, 297.0], [69.7, 297.0], [69.8, 297.0], [69.9, 297.0], [70.0, 297.0], [70.1, 297.0], [70.2, 297.0], [70.3, 297.0], [70.4, 303.0], [70.5, 303.0], [70.6, 303.0], [70.7, 303.0], [70.8, 303.0], [70.9, 303.0], [71.0, 303.0], [71.1, 303.0], [71.2, 303.0], [71.3, 303.0], [71.4, 303.0], [71.5, 303.0], [71.6, 303.0], [71.7, 303.0], [71.8, 303.0], [71.9, 312.0], [72.0, 312.0], [72.1, 312.0], [72.2, 312.0], [72.3, 312.0], [72.4, 312.0], [72.5, 312.0], [72.6, 312.0], [72.7, 312.0], [72.8, 312.0], [72.9, 312.0], [73.0, 312.0], [73.1, 312.0], [73.2, 312.0], [73.3, 312.0], [73.4, 312.0], [73.5, 320.0], [73.6, 320.0], [73.7, 320.0], [73.8, 320.0], [73.9, 320.0], [74.0, 320.0], [74.1, 320.0], [74.2, 320.0], [74.3, 320.0], [74.4, 320.0], [74.5, 320.0], [74.6, 320.0], [74.7, 320.0], [74.8, 320.0], [74.9, 320.0], [75.0, 321.0], [75.1, 321.0], [75.2, 321.0], [75.3, 321.0], [75.4, 321.0], [75.5, 321.0], [75.6, 321.0], [75.7, 321.0], [75.8, 321.0], [75.9, 321.0], [76.0, 321.0], [76.1, 321.0], [76.2, 321.0], [76.3, 321.0], [76.4, 321.0], [76.5, 321.0], [76.6, 321.0], [76.7, 321.0], [76.8, 321.0], [76.9, 321.0], [77.0, 321.0], [77.1, 321.0], [77.2, 321.0], [77.3, 321.0], [77.4, 321.0], [77.5, 321.0], [77.6, 321.0], [77.7, 321.0], [77.8, 321.0], [77.9, 321.0], [78.0, 321.0], [78.1, 321.0], [78.2, 326.0], [78.3, 326.0], [78.4, 326.0], [78.5, 326.0], [78.6, 326.0], [78.7, 326.0], [78.8, 326.0], [78.9, 326.0], [79.0, 326.0], [79.1, 326.0], [79.2, 326.0], [79.3, 326.0], [79.4, 326.0], [79.5, 326.0], [79.6, 326.0], [79.7, 336.0], [79.8, 336.0], [79.9, 336.0], [80.0, 336.0], [80.1, 336.0], [80.2, 336.0], [80.3, 336.0], [80.4, 336.0], [80.5, 336.0], [80.6, 336.0], [80.7, 336.0], [80.8, 336.0], [80.9, 336.0], [81.0, 336.0], [81.1, 336.0], [81.2, 336.0], [81.3, 356.0], [81.4, 356.0], [81.5, 356.0], [81.6, 356.0], [81.7, 356.0], [81.8, 356.0], [81.9, 356.0], [82.0, 356.0], [82.1, 356.0], [82.2, 356.0], [82.3, 356.0], [82.4, 356.0], [82.5, 356.0], [82.6, 356.0], [82.7, 356.0], [82.8, 356.0], [82.9, 369.0], [83.0, 369.0], [83.1, 369.0], [83.2, 369.0], [83.3, 369.0], [83.4, 369.0], [83.5, 369.0], [83.6, 369.0], [83.7, 369.0], [83.8, 369.0], [83.9, 369.0], [84.0, 369.0], [84.1, 369.0], [84.2, 369.0], [84.3, 369.0], [84.4, 373.0], [84.5, 373.0], [84.6, 373.0], [84.7, 373.0], [84.8, 373.0], [84.9, 373.0], [85.0, 373.0], [85.1, 373.0], [85.2, 373.0], [85.3, 373.0], [85.4, 373.0], [85.5, 373.0], [85.6, 373.0], [85.7, 373.0], [85.8, 373.0], [85.9, 373.0], [86.0, 373.0], [86.1, 373.0], [86.2, 373.0], [86.3, 373.0], [86.4, 373.0], [86.5, 373.0], [86.6, 373.0], [86.7, 373.0], [86.8, 373.0], [86.9, 373.0], [87.0, 373.0], [87.1, 373.0], [87.2, 373.0], [87.3, 373.0], [87.4, 373.0], [87.5, 374.0], [87.6, 374.0], [87.7, 374.0], [87.8, 374.0], [87.9, 374.0], [88.0, 374.0], [88.1, 374.0], [88.2, 374.0], [88.3, 374.0], [88.4, 374.0], [88.5, 374.0], [88.6, 374.0], [88.7, 374.0], [88.8, 374.0], [88.9, 374.0], [89.0, 374.0], [89.1, 375.0], [89.2, 375.0], [89.3, 375.0], [89.4, 375.0], [89.5, 375.0], [89.6, 375.0], [89.7, 375.0], [89.8, 375.0], [89.9, 375.0], [90.0, 375.0], [90.1, 375.0], [90.2, 375.0], [90.3, 375.0], [90.4, 375.0], [90.5, 375.0], [90.6, 375.0], [90.7, 378.0], [90.8, 378.0], [90.9, 378.0], [91.0, 378.0], [91.1, 378.0], [91.2, 378.0], [91.3, 378.0], [91.4, 378.0], [91.5, 378.0], [91.6, 378.0], [91.7, 378.0], [91.8, 378.0], [91.9, 378.0], [92.0, 378.0], [92.1, 378.0], [92.2, 416.0], [92.3, 416.0], [92.4, 416.0], [92.5, 416.0], [92.6, 416.0], [92.7, 416.0], [92.8, 416.0], [92.9, 416.0], [93.0, 416.0], [93.1, 416.0], [93.2, 416.0], [93.3, 416.0], [93.4, 416.0], [93.5, 416.0], [93.6, 416.0], [93.7, 416.0], [93.8, 548.0], [93.9, 548.0], [94.0, 548.0], [94.1, 548.0], [94.2, 548.0], [94.3, 548.0], [94.4, 548.0], [94.5, 548.0], [94.6, 548.0], [94.7, 548.0], [94.8, 548.0], [94.9, 548.0], [95.0, 548.0], [95.1, 548.0], [95.2, 548.0], [95.3, 548.0], [95.4, 554.0], [95.5, 554.0], [95.6, 554.0], [95.7, 554.0], [95.8, 554.0], [95.9, 554.0], [96.0, 554.0], [96.1, 554.0], [96.2, 554.0], [96.3, 554.0], [96.4, 554.0], [96.5, 554.0], [96.6, 554.0], [96.7, 554.0], [96.8, 554.0], [96.9, 1929.0], [97.0, 1929.0], [97.1, 1929.0], [97.2, 1929.0], [97.3, 1929.0], [97.4, 1929.0], [97.5, 1929.0], [97.6, 1929.0], [97.7, 1929.0], [97.8, 1929.0], [97.9, 1929.0], [98.0, 1929.0], [98.1, 1929.0], [98.2, 1929.0], [98.3, 1929.0], [98.4, 1929.0], [98.5, 2771.0], [98.6, 2771.0], [98.7, 2771.0], [98.8, 2771.0], [98.9, 2771.0], [99.0, 2771.0], [99.1, 2771.0], [99.2, 2771.0], [99.3, 2771.0], [99.4, 2771.0], [99.5, 2771.0], [99.6, 2771.0], [99.7, 2771.0], [99.8, 2771.0], [99.9, 2771.0]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[0.0, 94.0], [0.1, 94.0], [0.2, 94.0], [0.3, 94.0], [0.4, 94.0], [0.5, 94.0], [0.6, 94.0], [0.7, 94.0], [0.8, 94.0], [0.9, 94.0], [1.0, 94.0], [1.1, 94.0], [1.2, 94.0], [1.3, 94.0], [1.4, 94.0], [1.5, 94.0], [1.6, 102.0], [1.7, 102.0], [1.8, 102.0], [1.9, 102.0], [2.0, 102.0], [2.1, 102.0], [2.2, 102.0], [2.3, 102.0], [2.4, 102.0], [2.5, 102.0], [2.6, 102.0], [2.7, 102.0], [2.8, 102.0], [2.9, 102.0], [3.0, 102.0], [3.1, 102.0], [3.2, 106.0], [3.3, 106.0], [3.4, 106.0], [3.5, 106.0], [3.6, 106.0], [3.7, 106.0], [3.8, 106.0], [3.9, 106.0], [4.0, 106.0], [4.1, 106.0], [4.2, 106.0], [4.3, 106.0], [4.4, 106.0], [4.5, 106.0], [4.6, 106.0], [4.7, 110.0], [4.8, 110.0], [4.9, 110.0], [5.0, 110.0], [5.1, 110.0], [5.2, 110.0], [5.3, 110.0], [5.4, 110.0], [5.5, 110.0], [5.6, 110.0], [5.7, 110.0], [5.8, 110.0], [5.9, 110.0], [6.0, 110.0], [6.1, 110.0], [6.2, 110.0], [6.3, 114.0], [6.4, 114.0], [6.5, 114.0], [6.6, 114.0], [6.7, 114.0], [6.8, 114.0], [6.9, 114.0], [7.0, 114.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 114.0], [7.8, 114.0], [7.9, 123.0], [8.0, 123.0], [8.1, 123.0], [8.2, 123.0], [8.3, 123.0], [8.4, 123.0], [8.5, 123.0], [8.6, 123.0], [8.7, 123.0], [8.8, 123.0], [8.9, 123.0], [9.0, 123.0], [9.1, 123.0], [9.2, 123.0], [9.3, 123.0], [9.4, 125.0], [9.5, 125.0], [9.6, 125.0], [9.7, 125.0], [9.8, 125.0], [9.9, 125.0], [10.0, 125.0], [10.1, 125.0], [10.2, 125.0], [10.3, 125.0], [10.4, 125.0], [10.5, 125.0], [10.6, 125.0], [10.7, 125.0], [10.8, 125.0], [10.9, 125.0], [11.0, 125.0], [11.1, 125.0], [11.2, 125.0], [11.3, 125.0], [11.4, 125.0], [11.5, 125.0], [11.6, 125.0], [11.7, 125.0], [11.8, 125.0], [11.9, 125.0], [12.0, 125.0], [12.1, 125.0], [12.2, 125.0], [12.3, 125.0], [12.4, 125.0], [12.5, 126.0], [12.6, 126.0], [12.7, 126.0], [12.8, 126.0], [12.9, 126.0], [13.0, 126.0], [13.1, 126.0], [13.2, 126.0], [13.3, 126.0], [13.4, 126.0], [13.5, 126.0], [13.6, 126.0], [13.7, 126.0], [13.8, 126.0], [13.9, 126.0], [14.0, 126.0], [14.1, 129.0], [14.2, 129.0], [14.3, 129.0], [14.4, 129.0], [14.5, 129.0], [14.6, 129.0], [14.7, 129.0], [14.8, 129.0], [14.9, 129.0], [15.0, 129.0], [15.1, 129.0], [15.2, 129.0], [15.3, 129.0], [15.4, 129.0], [15.5, 129.0], [15.6, 129.0], [15.7, 130.0], [15.8, 130.0], [15.9, 130.0], [16.0, 130.0], [16.1, 130.0], [16.2, 130.0], [16.3, 130.0], [16.4, 130.0], [16.5, 130.0], [16.6, 130.0], [16.7, 130.0], [16.8, 130.0], [16.9, 130.0], [17.0, 130.0], [17.1, 130.0], [17.2, 135.0], [17.3, 135.0], [17.4, 135.0], [17.5, 135.0], [17.6, 135.0], [17.7, 135.0], [17.8, 135.0], [17.9, 135.0], [18.0, 135.0], [18.1, 135.0], [18.2, 135.0], [18.3, 135.0], [18.4, 135.0], [18.5, 135.0], [18.6, 135.0], [18.7, 135.0], [18.8, 136.0], [18.9, 136.0], [19.0, 136.0], [19.1, 136.0], [19.2, 136.0], [19.3, 136.0], [19.4, 136.0], [19.5, 136.0], [19.6, 136.0], [19.7, 136.0], [19.8, 136.0], [19.9, 136.0], [20.0, 136.0], [20.1, 136.0], [20.2, 136.0], [20.3, 136.0], [20.4, 139.0], [20.5, 139.0], [20.6, 139.0], [20.7, 139.0], [20.8, 139.0], [20.9, 139.0], [21.0, 139.0], [21.1, 139.0], [21.2, 139.0], [21.3, 139.0], [21.4, 139.0], [21.5, 139.0], [21.6, 139.0], [21.7, 139.0], [21.8, 139.0], [21.9, 139.0], [22.0, 139.0], [22.1, 139.0], [22.2, 139.0], [22.3, 139.0], [22.4, 139.0], [22.5, 139.0], [22.6, 139.0], [22.7, 139.0], [22.8, 139.0], [22.9, 139.0], [23.0, 139.0], [23.1, 139.0], [23.2, 139.0], [23.3, 139.0], [23.4, 139.0], [23.5, 140.0], [23.6, 140.0], [23.7, 140.0], [23.8, 140.0], [23.9, 140.0], [24.0, 140.0], [24.1, 140.0], [24.2, 140.0], [24.3, 140.0], [24.4, 140.0], [24.5, 140.0], [24.6, 140.0], [24.7, 140.0], [24.8, 140.0], [24.9, 140.0], [25.0, 141.0], [25.1, 141.0], [25.2, 141.0], [25.3, 141.0], [25.4, 141.0], [25.5, 141.0], [25.6, 141.0], [25.7, 141.0], [25.8, 141.0], [25.9, 141.0], [26.0, 141.0], [26.1, 141.0], [26.2, 141.0], [26.3, 141.0], [26.4, 141.0], [26.5, 141.0], [26.6, 145.0], [26.7, 145.0], [26.8, 145.0], [26.9, 145.0], [27.0, 145.0], [27.1, 145.0], [27.2, 145.0], [27.3, 145.0], [27.4, 145.0], [27.5, 145.0], [27.6, 145.0], [27.7, 145.0], [27.8, 145.0], [27.9, 145.0], [28.0, 145.0], [28.1, 145.0], [28.2, 169.0], [28.3, 169.0], [28.4, 169.0], [28.5, 169.0], [28.6, 169.0], [28.7, 169.0], [28.8, 169.0], [28.9, 169.0], [29.0, 169.0], [29.1, 169.0], [29.2, 169.0], [29.3, 169.0], [29.4, 169.0], [29.5, 169.0], [29.6, 169.0], [29.7, 175.0], [29.8, 175.0], [29.9, 175.0], [30.0, 175.0], [30.1, 175.0], [30.2, 175.0], [30.3, 175.0], [30.4, 175.0], [30.5, 175.0], [30.6, 175.0], [30.7, 175.0], [30.8, 175.0], [30.9, 175.0], [31.0, 175.0], [31.1, 175.0], [31.2, 175.0], [31.3, 187.0], [31.4, 187.0], [31.5, 187.0], [31.6, 187.0], [31.7, 187.0], [31.8, 187.0], [31.9, 187.0], [32.0, 187.0], [32.1, 187.0], [32.2, 187.0], [32.3, 187.0], [32.4, 187.0], [32.5, 187.0], [32.6, 187.0], [32.7, 187.0], [32.8, 187.0], [32.9, 200.0], [33.0, 200.0], [33.1, 200.0], [33.2, 200.0], [33.3, 200.0], [33.4, 200.0], [33.5, 200.0], [33.6, 200.0], [33.7, 200.0], [33.8, 200.0], [33.9, 200.0], [34.0, 200.0], [34.1, 200.0], [34.2, 200.0], [34.3, 200.0], [34.4, 201.0], [34.5, 201.0], [34.6, 201.0], [34.7, 201.0], [34.8, 201.0], [34.9, 201.0], [35.0, 201.0], [35.1, 201.0], [35.2, 201.0], [35.3, 201.0], [35.4, 201.0], [35.5, 201.0], [35.6, 201.0], [35.7, 201.0], [35.8, 201.0], [35.9, 201.0], [36.0, 206.0], [36.1, 206.0], [36.2, 206.0], [36.3, 206.0], [36.4, 206.0], [36.5, 206.0], [36.6, 206.0], [36.7, 206.0], [36.8, 206.0], [36.9, 206.0], [37.0, 206.0], [37.1, 206.0], [37.2, 206.0], [37.3, 206.0], [37.4, 206.0], [37.5, 207.0], [37.6, 207.0], [37.7, 207.0], [37.8, 207.0], [37.9, 207.0], [38.0, 207.0], [38.1, 207.0], [38.2, 207.0], [38.3, 207.0], [38.4, 207.0], [38.5, 207.0], [38.6, 207.0], [38.7, 207.0], [38.8, 207.0], [38.9, 207.0], [39.0, 207.0], [39.1, 208.0], [39.2, 208.0], [39.3, 208.0], [39.4, 208.0], [39.5, 208.0], [39.6, 208.0], [39.7, 208.0], [39.8, 208.0], [39.9, 208.0], [40.0, 208.0], [40.1, 208.0], [40.2, 208.0], [40.3, 208.0], [40.4, 208.0], [40.5, 208.0], [40.6, 208.0], [40.7, 213.0], [40.8, 213.0], [40.9, 213.0], [41.0, 213.0], [41.1, 213.0], [41.2, 213.0], [41.3, 213.0], [41.4, 213.0], [41.5, 213.0], [41.6, 213.0], [41.7, 213.0], [41.8, 213.0], [41.9, 213.0], [42.0, 213.0], [42.1, 213.0], [42.2, 215.0], [42.3, 215.0], [42.4, 215.0], [42.5, 215.0], [42.6, 215.0], [42.7, 215.0], [42.8, 215.0], [42.9, 215.0], [43.0, 215.0], [43.1, 215.0], [43.2, 215.0], [43.3, 215.0], [43.4, 215.0], [43.5, 215.0], [43.6, 215.0], [43.7, 215.0], [43.8, 222.0], [43.9, 222.0], [44.0, 222.0], [44.1, 222.0], [44.2, 222.0], [44.3, 222.0], [44.4, 222.0], [44.5, 222.0], [44.6, 222.0], [44.7, 222.0], [44.8, 222.0], [44.9, 222.0], [45.0, 222.0], [45.1, 222.0], [45.2, 222.0], [45.3, 222.0], [45.4, 223.0], [45.5, 223.0], [45.6, 223.0], [45.7, 223.0], [45.8, 223.0], [45.9, 223.0], [46.0, 223.0], [46.1, 223.0], [46.2, 223.0], [46.3, 223.0], [46.4, 223.0], [46.5, 223.0], [46.6, 223.0], [46.7, 223.0], [46.8, 223.0], [46.9, 246.0], [47.0, 246.0], [47.1, 246.0], [47.2, 246.0], [47.3, 246.0], [47.4, 246.0], [47.5, 246.0], [47.6, 246.0], [47.7, 246.0], [47.8, 246.0], [47.9, 246.0], [48.0, 246.0], [48.1, 246.0], [48.2, 246.0], [48.3, 246.0], [48.4, 246.0], [48.5, 263.0], [48.6, 263.0], [48.7, 263.0], [48.8, 263.0], [48.9, 263.0], [49.0, 263.0], [49.1, 263.0], [49.2, 263.0], [49.3, 263.0], [49.4, 263.0], [49.5, 263.0], [49.6, 263.0], [49.7, 263.0], [49.8, 263.0], [49.9, 263.0], [50.0, 264.0], [50.1, 264.0], [50.2, 264.0], [50.3, 264.0], [50.4, 264.0], [50.5, 264.0], [50.6, 264.0], [50.7, 264.0], [50.8, 264.0], [50.9, 264.0], [51.0, 264.0], [51.1, 264.0], [51.2, 264.0], [51.3, 264.0], [51.4, 264.0], [51.5, 264.0], [51.6, 265.0], [51.7, 265.0], [51.8, 265.0], [51.9, 265.0], [52.0, 265.0], [52.1, 265.0], [52.2, 265.0], [52.3, 265.0], [52.4, 265.0], [52.5, 265.0], [52.6, 265.0], [52.7, 265.0], [52.8, 265.0], [52.9, 265.0], [53.0, 265.0], [53.1, 265.0], [53.2, 272.0], [53.3, 272.0], [53.4, 272.0], [53.5, 272.0], [53.6, 272.0], [53.7, 272.0], [53.8, 272.0], [53.9, 272.0], [54.0, 272.0], [54.1, 272.0], [54.2, 272.0], [54.3, 272.0], [54.4, 272.0], [54.5, 272.0], [54.6, 272.0], [54.7, 273.0], [54.8, 273.0], [54.9, 273.0], [55.0, 273.0], [55.1, 273.0], [55.2, 273.0], [55.3, 273.0], [55.4, 273.0], [55.5, 273.0], [55.6, 273.0], [55.7, 273.0], [55.8, 273.0], [55.9, 273.0], [56.0, 273.0], [56.1, 273.0], [56.2, 273.0], [56.3, 282.0], [56.4, 282.0], [56.5, 282.0], [56.6, 282.0], [56.7, 282.0], [56.8, 282.0], [56.9, 282.0], [57.0, 282.0], [57.1, 282.0], [57.2, 282.0], [57.3, 282.0], [57.4, 282.0], [57.5, 282.0], [57.6, 282.0], [57.7, 282.0], [57.8, 282.0], [57.9, 284.0], [58.0, 284.0], [58.1, 284.0], [58.2, 284.0], [58.3, 284.0], [58.4, 284.0], [58.5, 284.0], [58.6, 284.0], [58.7, 284.0], [58.8, 284.0], [58.9, 284.0], [59.0, 284.0], [59.1, 284.0], [59.2, 284.0], [59.3, 284.0], [59.4, 291.0], [59.5, 291.0], [59.6, 291.0], [59.7, 291.0], [59.8, 291.0], [59.9, 291.0], [60.0, 291.0], [60.1, 291.0], [60.2, 291.0], [60.3, 291.0], [60.4, 291.0], [60.5, 291.0], [60.6, 291.0], [60.7, 291.0], [60.8, 291.0], [60.9, 291.0], [61.0, 292.0], [61.1, 292.0], [61.2, 292.0], [61.3, 292.0], [61.4, 292.0], [61.5, 292.0], [61.6, 292.0], [61.7, 292.0], [61.8, 292.0], [61.9, 292.0], [62.0, 292.0], [62.1, 292.0], [62.2, 292.0], [62.3, 292.0], [62.4, 292.0], [62.5, 293.0], [62.6, 293.0], [62.7, 293.0], [62.8, 293.0], [62.9, 293.0], [63.0, 293.0], [63.1, 293.0], [63.2, 293.0], [63.3, 293.0], [63.4, 293.0], [63.5, 293.0], [63.6, 293.0], [63.7, 293.0], [63.8, 293.0], [63.9, 293.0], [64.0, 293.0], [64.1, 304.0], [64.2, 304.0], [64.3, 304.0], [64.4, 304.0], [64.5, 304.0], [64.6, 304.0], [64.7, 304.0], [64.8, 304.0], [64.9, 304.0], [65.0, 304.0], [65.1, 304.0], [65.2, 304.0], [65.3, 304.0], [65.4, 304.0], [65.5, 304.0], [65.6, 304.0], [65.7, 309.0], [65.8, 309.0], [65.9, 309.0], [66.0, 309.0], [66.1, 309.0], [66.2, 309.0], [66.3, 309.0], [66.4, 309.0], [66.5, 309.0], [66.6, 309.0], [66.7, 309.0], [66.8, 309.0], [66.9, 309.0], [67.0, 309.0], [67.1, 309.0], [67.2, 310.0], [67.3, 310.0], [67.4, 310.0], [67.5, 310.0], [67.6, 310.0], [67.7, 310.0], [67.8, 310.0], [67.9, 310.0], [68.0, 310.0], [68.1, 310.0], [68.2, 310.0], [68.3, 310.0], [68.4, 310.0], [68.5, 310.0], [68.6, 310.0], [68.7, 310.0], [68.8, 314.0], [68.9, 314.0], [69.0, 314.0], [69.1, 314.0], [69.2, 314.0], [69.3, 314.0], [69.4, 314.0], [69.5, 314.0], [69.6, 314.0], [69.7, 314.0], [69.8, 314.0], [69.9, 314.0], [70.0, 314.0], [70.1, 314.0], [70.2, 314.0], [70.3, 314.0], [70.4, 315.0], [70.5, 315.0], [70.6, 315.0], [70.7, 315.0], [70.8, 315.0], [70.9, 315.0], [71.0, 315.0], [71.1, 315.0], [71.2, 315.0], [71.3, 315.0], [71.4, 315.0], [71.5, 315.0], [71.6, 315.0], [71.7, 315.0], [71.8, 315.0], [71.9, 318.0], [72.0, 318.0], [72.1, 318.0], [72.2, 318.0], [72.3, 318.0], [72.4, 318.0], [72.5, 318.0], [72.6, 318.0], [72.7, 318.0], [72.8, 318.0], [72.9, 318.0], [73.0, 318.0], [73.1, 318.0], [73.2, 318.0], [73.3, 318.0], [73.4, 318.0], [73.5, 323.0], [73.6, 323.0], [73.7, 323.0], [73.8, 323.0], [73.9, 323.0], [74.0, 323.0], [74.1, 323.0], [74.2, 323.0], [74.3, 323.0], [74.4, 323.0], [74.5, 323.0], [74.6, 323.0], [74.7, 323.0], [74.8, 323.0], [74.9, 323.0], [75.0, 339.0], [75.1, 339.0], [75.2, 339.0], [75.3, 339.0], [75.4, 339.0], [75.5, 339.0], [75.6, 339.0], [75.7, 339.0], [75.8, 339.0], [75.9, 339.0], [76.0, 339.0], [76.1, 339.0], [76.2, 339.0], [76.3, 339.0], [76.4, 339.0], [76.5, 339.0], [76.6, 346.0], [76.7, 346.0], [76.8, 346.0], [76.9, 346.0], [77.0, 346.0], [77.1, 346.0], [77.2, 346.0], [77.3, 346.0], [77.4, 346.0], [77.5, 346.0], [77.6, 346.0], [77.7, 346.0], [77.8, 346.0], [77.9, 346.0], [78.0, 346.0], [78.1, 346.0], [78.2, 350.0], [78.3, 350.0], [78.4, 350.0], [78.5, 350.0], [78.6, 350.0], [78.7, 350.0], [78.8, 350.0], [78.9, 350.0], [79.0, 350.0], [79.1, 350.0], [79.2, 350.0], [79.3, 350.0], [79.4, 350.0], [79.5, 350.0], [79.6, 350.0], [79.7, 353.0], [79.8, 353.0], [79.9, 353.0], [80.0, 353.0], [80.1, 353.0], [80.2, 353.0], [80.3, 353.0], [80.4, 353.0], [80.5, 353.0], [80.6, 353.0], [80.7, 353.0], [80.8, 353.0], [80.9, 353.0], [81.0, 353.0], [81.1, 353.0], [81.2, 353.0], [81.3, 465.0], [81.4, 465.0], [81.5, 465.0], [81.6, 465.0], [81.7, 465.0], [81.8, 465.0], [81.9, 465.0], [82.0, 465.0], [82.1, 465.0], [82.2, 465.0], [82.3, 465.0], [82.4, 465.0], [82.5, 465.0], [82.6, 465.0], [82.7, 465.0], [82.8, 465.0], [82.9, 543.0], [83.0, 543.0], [83.1, 543.0], [83.2, 543.0], [83.3, 543.0], [83.4, 543.0], [83.5, 543.0], [83.6, 543.0], [83.7, 543.0], [83.8, 543.0], [83.9, 543.0], [84.0, 543.0], [84.1, 543.0], [84.2, 543.0], [84.3, 543.0], [84.4, 552.0], [84.5, 552.0], [84.6, 552.0], [84.7, 552.0], [84.8, 552.0], [84.9, 552.0], [85.0, 552.0], [85.1, 552.0], [85.2, 552.0], [85.3, 552.0], [85.4, 552.0], [85.5, 552.0], [85.6, 552.0], [85.7, 552.0], [85.8, 552.0], [85.9, 552.0], [86.0, 632.0], [86.1, 632.0], [86.2, 632.0], [86.3, 632.0], [86.4, 632.0], [86.5, 632.0], [86.6, 632.0], [86.7, 632.0], [86.8, 632.0], [86.9, 632.0], [87.0, 632.0], [87.1, 632.0], [87.2, 632.0], [87.3, 632.0], [87.4, 632.0], [87.5, 800.0], [87.6, 800.0], [87.7, 800.0], [87.8, 800.0], [87.9, 800.0], [88.0, 800.0], [88.1, 800.0], [88.2, 800.0], [88.3, 800.0], [88.4, 800.0], [88.5, 800.0], [88.6, 800.0], [88.7, 800.0], [88.8, 800.0], [88.9, 800.0], [89.0, 800.0], [89.1, 881.0], [89.2, 881.0], [89.3, 881.0], [89.4, 881.0], [89.5, 881.0], [89.6, 881.0], [89.7, 881.0], [89.8, 881.0], [89.9, 881.0], [90.0, 881.0], [90.1, 881.0], [90.2, 881.0], [90.3, 881.0], [90.4, 881.0], [90.5, 881.0], [90.6, 881.0], [90.7, 887.0], [90.8, 887.0], [90.9, 887.0], [91.0, 887.0], [91.1, 887.0], [91.2, 887.0], [91.3, 887.0], [91.4, 887.0], [91.5, 887.0], [91.6, 887.0], [91.7, 887.0], [91.8, 887.0], [91.9, 887.0], [92.0, 887.0], [92.1, 887.0], [92.2, 1049.0], [92.3, 1049.0], [92.4, 1049.0], [92.5, 1049.0], [92.6, 1049.0], [92.7, 1049.0], [92.8, 1049.0], [92.9, 1049.0], [93.0, 1049.0], [93.1, 1049.0], [93.2, 1049.0], [93.3, 1049.0], [93.4, 1049.0], [93.5, 1049.0], [93.6, 1049.0], [93.7, 1049.0], [93.8, 1092.0], [93.9, 1092.0], [94.0, 1092.0], [94.1, 1092.0], [94.2, 1092.0], [94.3, 1092.0], [94.4, 1092.0], [94.5, 1092.0], [94.6, 1092.0], [94.7, 1092.0], [94.8, 1092.0], [94.9, 1092.0], [95.0, 1092.0], [95.1, 1092.0], [95.2, 1092.0], [95.3, 1092.0], [95.4, 1094.0], [95.5, 1094.0], [95.6, 1094.0], [95.7, 1094.0], [95.8, 1094.0], [95.9, 1094.0], [96.0, 1094.0], [96.1, 1094.0], [96.2, 1094.0], [96.3, 1094.0], [96.4, 1094.0], [96.5, 1094.0], [96.6, 1094.0], [96.7, 1094.0], [96.8, 1094.0], [96.9, 2285.0], [97.0, 2285.0], [97.1, 2285.0], [97.2, 2285.0], [97.3, 2285.0], [97.4, 2285.0], [97.5, 2285.0], [97.6, 2285.0], [97.7, 2285.0], [97.8, 2285.0], [97.9, 2285.0], [98.0, 2285.0], [98.1, 2285.0], [98.2, 2285.0], [98.3, 2285.0], [98.4, 2285.0], [98.5, 7423.0], [98.6, 7423.0], [98.7, 7423.0], [98.8, 7423.0], [98.9, 7423.0], [99.0, 7423.0], [99.1, 7423.0], [99.2, 7423.0], [99.3, 7423.0], [99.4, 7423.0], [99.5, 7423.0], [99.6, 7423.0], [99.7, 7423.0], [99.8, 7423.0], [99.9, 7423.0]], "isOverall": false, "label": "HelpDoc-0", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 36.0, "series": [{"data": [[0.0, 36.0], [600.0, 10.0], [700.0, 4.0], [200.0, 15.0], [800.0, 3.0], [3600.0, 1.0], [900.0, 1.0], [4200.0, 1.0], [1100.0, 2.0], [300.0, 9.0], [1200.0, 1.0], [1400.0, 1.0], [400.0, 6.0], [100.0, 1.0], [7400.0, 1.0], [500.0, 8.0]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[600.0, 5.0], [700.0, 4.0], [800.0, 3.0], [900.0, 7.0], [1000.0, 4.0], [1100.0, 1.0], [1200.0, 4.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 1.0], [1900.0, 1.0], [2100.0, 1.0], [2300.0, 1.0], [2600.0, 1.0], [3300.0, 1.0], [68500.0, 1.0], [71500.0, 1.0], [73900.0, 1.0], [8200.0, 1.0], [13800.0, 1.0], [14400.0, 1.0], [15300.0, 1.0], [17300.0, 1.0], [17900.0, 1.0], [17800.0, 1.0], [19400.0, 1.0], [21200.0, 1.0], [21000.0, 1.0], [22800.0, 1.0], [25600.0, 1.0], [26700.0, 1.0], [29600.0, 1.0], [29900.0, 1.0], [30500.0, 1.0], [31100.0, 1.0], [32000.0, 1.0], [32600.0, 1.0], [35500.0, 1.0], [37600.0, 1.0], [37400.0, 1.0], [37800.0, 1.0], [37700.0, 1.0], [38500.0, 1.0], [39400.0, 1.0], [41200.0, 1.0], [41600.0, 1.0], [42200.0, 1.0], [41100.0, 1.0], [44800.0, 1.0], [47500.0, 1.0], [49000.0, 1.0], [50800.0, 1.0], [51100.0, 1.0], [52800.0, 1.0], [51600.0, 1.0], [57200.0, 1.0], [58600.0, 1.0], [60200.0, 2.0], [60700.0, 1.0], [64000.0, 1.0], [88400.0, 1.0], [400.0, 5.0], [500.0, 8.0]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[0.0, 2.0], [300.0, 14.0], [2700.0, 1.0], [100.0, 29.0], [200.0, 14.0], [400.0, 1.0], [1900.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[0.0, 1.0], [2200.0, 1.0], [300.0, 11.0], [600.0, 1.0], [800.0, 3.0], [100.0, 20.0], [200.0, 20.0], [400.0, 1.0], [7400.0, 1.0], [1000.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "HelpDoc-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 88400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 201.0, "series": [{"data": [[0.0, 112.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 11.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 201.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 11.770676691729326, "minX": 1.60699998E12, "maxY": 20.0, "series": [{"data": [[1.60699998E12, 20.0], [1.6070001E12, 11.770676691729326], [1.60700004E12, 20.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6070001E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 113.5, "minX": 1.0, "maxY": 51602.0, "series": [{"data": [[8.0, 577.6666666666666], [2.0, 251.0], [9.0, 509.3333333333333], [10.0, 602.25], [11.0, 423.25], [12.0, 272.3333333333333], [3.0, 738.5], [13.0, 614.75], [14.0, 664.0], [15.0, 325.5], [16.0, 595.5], [4.0, 691.9999999999999], [1.0, 462.25], [17.0, 256.14285714285717], [18.0, 349.75], [19.0, 358.6363636363636], [20.0, 483.030303030303], [5.0, 539.0], [6.0, 731.0], [7.0, 650.5]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[14.260000000000012, 474.6499999999999]], "isOverall": false, "label": "HelpDoc-Aggregated", "isController": false}, {"data": [[8.0, 1144.75], [2.0, 505.0], [9.0, 1731.6666666666667], [10.0, 13813.666666666666], [11.0, 10998.6], [12.0, 826.0], [3.0, 984.0], [13.0, 33576.75], [15.0, 22847.0], [16.0, 890.0], [4.0, 18419.0], [1.0, 22749.75], [17.0, 8162.250000000002], [18.0, 51602.0], [19.0, 18143.833333333332], [20.0, 28549.94285714286], [5.0, 1282.0], [6.0, 34790.5]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[14.57000000000001, 19252.160000000003]], "isOverall": false, "label": "Notices-Aggregated", "isController": false}, {"data": [[8.0, 330.6666666666667], [2.0, 113.5], [9.0, 238.66666666666666], [10.0, 471.3333333333333], [11.0, 259.3333333333333], [12.0, 119.0], [3.0, 129.0], [13.0, 268.0], [14.0, 373.0], [15.0, 356.0], [16.0, 289.0], [4.0, 250.57142857142856], [1.0, 163.5], [17.0, 149.16666666666669], [18.0, 127.0], [19.0, 166.33333333333334], [20.0, 1008.0], [5.0, 266.0], [6.0, 416.0], [7.0, 323.0]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[11.624999999999996, 287.53125000000006]], "isOverall": false, "label": "HelpDoc-1-Aggregated", "isController": false}, {"data": [[8.0, 246.33333333333334], [2.0, 137.5], [9.0, 270.3333333333333], [10.0, 331.3333333333333], [11.0, 304.0], [12.0, 153.33333333333334], [3.0, 609.5], [13.0, 551.6666666666666], [14.0, 291.0], [15.0, 293.0], [16.0, 306.0], [4.0, 441.0], [1.0, 298.25], [17.0, 149.33333333333334], [18.0, 338.6666666666667], [19.0, 271.3333333333333], [20.0, 2171.4], [5.0, 272.0], [6.0, 315.0], [7.0, 327.5]], "isOverall": false, "label": "HelpDoc-0", "isController": false}, {"data": [[11.624999999999996, 453.03125000000006]], "isOverall": false, "label": "HelpDoc-0-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4.6, "minX": 1.60699998E12, "maxY": 60086.71666666667, "series": [{"data": [[1.60699998E12, 1548.1333333333334], [1.6070001E12, 60086.71666666667], [1.60700004E12, 20793.866666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60699998E12, 4.6], [1.6070001E12, 708.5], [1.60700004E12, 82.16666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6070001E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.60699998E12, "maxY": 28972.884615384613, "series": [{"data": [[1.60699998E12, 4.0], [1.6070001E12, 446.2638888888891], [1.60700004E12, 567.7777777777778]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[1.60699998E12, 14112.0], [1.6070001E12, 15884.680555555553], [1.60700004E12, 28972.884615384613]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[1.6070001E12, 224.60655737704914], [1.60700004E12, 1567.0]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[1.6070001E12, 301.62295081967216], [1.60700004E12, 3531.6666666666665]], "isOverall": false, "label": "HelpDoc-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6070001E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60699998E12, "maxY": 17659.653846153848, "series": [{"data": [[1.60699998E12, 0.0], [1.6070001E12, 255.52777777777771], [1.60700004E12, 392.40740740740733]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[1.60699998E12, 9162.0], [1.6070001E12, 10554.0], [1.60700004E12, 17659.653846153848]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[1.6070001E12, 224.57377049180323], [1.60700004E12, 1566.6666666666667]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[1.6070001E12, 301.60655737704917], [1.60700004E12, 3531.6666666666665]], "isOverall": false, "label": "HelpDoc-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6070001E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60699998E12, "maxY": 8897.153846153846, "series": [{"data": [[1.60699998E12, 0.0], [1.6070001E12, 72.84722222222223], [1.60700004E12, 0.0]], "isOverall": false, "label": "HelpDoc", "isController": false}, {"data": [[1.60699998E12, 6537.5], [1.6070001E12, 3587.222222222221], [1.60700004E12, 8897.153846153846]], "isOverall": false, "label": "Notices", "isController": false}, {"data": [[1.6070001E12, 0.0], [1.60700004E12, 0.0]], "isOverall": false, "label": "HelpDoc-1", "isController": false}, {"data": [[1.6070001E12, 85.98360655737703], [1.60700004E12, 0.0]], "isOverall": false, "label": "HelpDoc-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6070001E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 94.0, "minX": 1.60700004E12, "maxY": 7423.0, "series": [{"data": [[1.6070001E12, 1094.0], [1.60700004E12, 7423.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6070001E12, 94.32099991202354], [1.60700004E12, 887.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6070001E12, 94.65310003519058], [1.60700004E12, 887.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6070001E12, 94.50549995601177], [1.60700004E12, 887.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6070001E12, 94.0], [1.60700004E12, 887.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6070001E12, 214.0], [1.60700004E12, 2285.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6070001E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 113.5, "minX": 1.0, "maxY": 3936.0, "series": [{"data": [[2.0, 2350.0], [8.0, 314.0], [9.0, 113.5], [41.0, 125.0], [10.0, 450.5], [11.0, 320.5], [3.0, 292.0], [14.0, 222.5], [1.0, 2285.0], [4.0, 124.5], [17.0, 203.0], [18.0, 273.0], [19.0, 328.5], [5.0, 315.0], [22.0, 138.5], [7.0, 264.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 3936.0], [8.0, 702.0], [9.0, 571.0], [41.0, 444.0], [10.0, 1123.5], [11.0, 666.0], [3.0, 595.0], [14.0, 704.5], [4.0, 716.5], [1.0, 1042.0], [17.0, 983.0], [18.0, 654.0], [19.0, 664.0], [5.0, 627.5], [22.0, 826.0], [6.0, 2825.0], [7.0, 969.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 41.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 113.5, "minX": 1.0, "maxY": 2350.0, "series": [{"data": [[2.0, 2350.0], [8.0, 314.0], [9.0, 113.5], [41.0, 125.0], [10.0, 450.5], [11.0, 320.5], [3.0, 292.0], [14.0, 222.5], [1.0, 2285.0], [4.0, 124.5], [17.0, 203.0], [18.0, 273.0], [19.0, 328.5], [5.0, 315.0], [22.0, 138.5], [7.0, 264.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1586.0], [8.0, 465.0], [9.0, 282.0], [41.0, 253.0], [10.0, 437.5], [11.0, 345.0], [3.0, 292.0], [14.0, 395.0], [4.0, 292.0], [1.0, 422.5], [17.0, 687.0], [18.0, 289.0], [19.0, 339.0], [5.0, 294.5], [22.0, 569.0], [6.0, 2076.0], [7.0, 399.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 41.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.60699998E12, "maxY": 4.1, "series": [{"data": [[1.60699998E12, 0.4], [1.6070001E12, 4.1], [1.60700004E12, 0.9666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6070001E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.60699998E12, "maxY": 3.2333333333333334, "series": [{"data": [[1.60699998E12, 0.03333333333333333], [1.6070001E12, 3.2333333333333334], [1.60700004E12, 0.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6070001E12, 1.0166666666666666], [1.60700004E12, 0.05]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.60699998E12, 0.016666666666666666], [1.6070001E12, 0.18333333333333332], [1.60700004E12, 0.43333333333333335]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6070001E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.60699998E12, "maxY": 1.2, "series": [{"data": [[1.60699998E12, 0.016666666666666666], [1.6070001E12, 1.2], [1.60700004E12, 0.45]], "isOverall": false, "label": "HelpDoc-failure", "isController": false}, {"data": [[1.60699998E12, 0.03333333333333333], [1.6070001E12, 1.2], [1.60700004E12, 0.43333333333333335]], "isOverall": false, "label": "Notices-failure", "isController": false}, {"data": [[1.6070001E12, 1.0166666666666666], [1.60700004E12, 0.05]], "isOverall": false, "label": "HelpDoc-0-success", "isController": false}, {"data": [[1.60700004E12, 0.016666666666666666]], "isOverall": false, "label": "HelpDoc-1-failure", "isController": false}, {"data": [[1.6070001E12, 1.0166666666666666], [1.60700004E12, 0.03333333333333333]], "isOverall": false, "label": "HelpDoc-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6070001E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.60699998E12, "maxY": 2.4, "series": [{"data": [[1.6070001E12, 2.033333333333333], [1.60700004E12, 0.08333333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.60699998E12, 0.05], [1.6070001E12, 2.4], [1.60700004E12, 0.9]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6070001E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

